---
import VideoSection from '../components/VideoSection.astro';
import IntroSection from '../components/IntroSection.astro';
import Layout from '../layouts/Layout.astro';
---

<Layout title="Nacho Valgañón">
	<main class="snap-y snap-mandatory relative w-full h-screen overflow-auto">
		<div class="snap-center">
			<IntroSection />
		</div>
		<div class="snap-center">
			<VideoSection videoURL="6_VERY_PURPIRINEU.mp4" posterNum="1" title="Veri" subtitle="PUR PRINEU" />
		</div>
		<div class="snap-center">
			<VideoSection videoURL="3_COMPLOT.mp4" posterNum="2" title="Complot IPA" subtitle="CAMPAÑA COLLITA 2022" />
		</div>
		<div class="snap-center">
			<VideoSection videoURL="7_Malquerida.mp4" posterNum="3" title="Malquerida" />
		</div>
		<div class="snap-center">
			<VideoSection videoURL="1_Jazz_Fest_Voll_Damm.mp4" posterNum="4" title="Voll-Damm" subtitle="JAZZ" />
		</div>
		<div class="snap-center">
			<VideoSection videoURL="2_BockDamm.mp4" posterNum="5" title="Bock Damm" />
		</div>
		<div class="snap-center">
			<VideoSection videoURL="5_royal_caribbean_el_mar_te_llama.mp4" posterNum="6" title="Royal Caribbean" subtitle="EL MAR TE LLAMA" />
		</div>
		<div class="snap-center">
			<VideoSection videoURL="4_generalitat_residus.mp4" posterNum="7" title="Generalitat de Catalunya" subtitle="CAMPAÑA RESIDUS"/>
		</div>
		
		
	</main>
	
</Layout>

<style>
	
</style>
<script>

(function(){
	const observerOptions = {
		root: null,
		rootMargin: '0px',
		threshold:0.9
	}

	let currentVideo = null

	const videos = document.querySelectorAll("video");
	videos.forEach(video => {

		const videoID = video.getAttribute("id").split("-")[1]
		const $content = document.querySelector(`#content-${videoID}`) as HTMLElement;
		console.log(videoID)
		video.addEventListener("play", (event) => {
			if(currentVideo != null && currentVideo != video){
				console.log("pause de un video?")
				currentVideo.pause()
			}

			$content.style.setProperty("opacity", "0")

			currentVideo = video
		})

		video.addEventListener("pause", (event) => {
			$content.style.setProperty("opacity", "1")
		})
	})



    const observer = new IntersectionObserver(entries => {
        // Loop over the entries
        entries.forEach(entry => {
          // If the element is visible
          if (entry.isIntersecting) {
            // Add the animation class  
			
			if(currentVideo != null){
				currentVideo.pause()
			}

			currentVideo = null
          }
        });
      }, observerOptions);
      
	var targets = [
	Array.from(document.querySelectorAll('video')),
	].flat();
	targets.forEach((target) => observer.observe(target));


	/* PIJADA MÁXIMA EN LA INTRO */	
	let isIntro = false
	let destinationMouseX = 0
	let destinationMouseY = 0
	let currentMouseX = 0
	let currentMouseY = 0
	const MAX_DIST_LOGO = 40
	const MAX_DIST_TITLE = 20
	const WINDOW_W = window.innerWidth
	const WINDOW_H = window.innerHeight
	const MAX_W = WINDOW_W * .5
	const MAX_H = WINDOW_H * .5
	const SPEED = 10
	const $logo = document.querySelector("#nacho-logo") as HTMLElement
	const $title = document.querySelector("#nacho-title") as HTMLElement
	//const $test = document.querySelector("#test") as HTMLElement
	const logoInitPos = {
		x:$logo.getBoundingClientRect().x + ($logo.getBoundingClientRect().width * .5),
		y:$logo.getBoundingClientRect().y + ($logo.getBoundingClientRect().height * .5),
	}
	
	const titleBounding = $title.getBoundingClientRect()

	const titleInitPos = {
		x:$title.getBoundingClientRect().x + ($title.getBoundingClientRect().width * .5),
		y:$title.getBoundingClientRect().y + ($title.getBoundingClientRect().height * .5),
	}

	console.log($logo.getBoundingClientRect())
	console.log(window.innerWidth)
	console.log(window.innerHeight)

	const observerintro = new IntersectionObserver(entries => {
		entries.forEach(entry => {
          
          if (entry.isIntersecting) {
			isIntro = true
          }else{
			isIntro = false
		  }

        });
	}, observerOptions);
	observerintro.observe(document.querySelector("#intro") as Element)

	function loop(timeStamp) {
		
		if(isIntro){
			const dX = destinationMouseX - currentMouseX;
			const dY = destinationMouseY - currentMouseY;
			
			currentMouseX += (dX / SPEED);
			currentMouseY += (dY / SPEED);

			//$test.style.setProperty("top", `${currentMouseY}px`)
			//$test.style.setProperty("left", `${currentMouseX}px`)

			// Distancia respecto al title
			const titleFromMousePositions = {
				x1: currentMouseX, y1: currentMouseY,
				x2: titleInitPos.x, y2: titleInitPos.y,
				isDeg : false
			}

			// Distancia respecto al logo
			const logoFromMousePositions = {
				x1: currentMouseX, y1: currentMouseY,
				x2: logoInitPos.x, y2: logoInitPos.y,
				isDeg : false
			}
			
			let distFromTitle = distance(titleFromMousePositions)
			let angleFromTitle = angle(titleFromMousePositions)
			
			let distFromLogo = distance(logoFromMousePositions)
			let angleFromLogo = angle(logoFromMousePositions)

			let percentX = distFromTitle / MAX_W
			const radiusTitle = percentX * MAX_DIST_TITLE

			let logoPercentX = distFromLogo / MAX_W
			const radiusLogo = logoPercentX * MAX_DIST_LOGO
			

			const _xTitle = Math.cos(angleFromTitle) * radiusTitle
			const _yTitle = Math.sin(angleFromTitle) * radiusTitle

			$title.style.setProperty("left", `${_xTitle}px`)
			$title.style.setProperty("top", `${_yTitle}px`)

			const _xLogo = Math.cos(angleFromLogo) * radiusLogo
			const _yLogo = Math.sin(angleFromLogo) * radiusLogo

			$logo.style.setProperty("left", `${_xLogo}px`)
			$logo.style.setProperty("top", `${_yLogo}px`)

			// console.log(_xLogo, _yLogo)
		}

		window.requestAnimationFrame(loop);
	}
	
	window.requestAnimationFrame(loop);

	document.querySelector("body").onmousemove = handleMouseMove;

	function handleMouseMove(e){
		destinationMouseX = (e.pageX )
		destinationMouseY = (e.pageY)
	}

	function distance({x1, y1, x2, y2}){
		var a = x1 - x2;
		var b = y1 - y2;

		var c = Math.sqrt( a*a + b*b );
		return c
	}

	function angle({x1, y1, x2, y2, isDeg = true}){
		var angleRad = Math.atan2(y2 - y1, x2 - x1);

		if(isDeg){
			var angleDeg = angleRad * 180 / Math.PI;
			return angleDeg
		}else{
			return angleRad
		}
	}
})();

	

  </script>
